{"id":"../../node_modules/axios/lib/helpers/spread.js","dependencies":[{"name":"/home/daniyal/Projects/social-media/package.json","includedInParent":true,"mtime":1603471777956},{"name":"/home/daniyal/Projects/social-media/node_modules/axios/package.json","includedInParent":true,"mtime":1603471832673}],"generated":{"js":"'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"../../node_modules/axios/lib/helpers/spread.js":"'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"},"lineCount":28}},"error":null,"hash":"4be52ee215eec9bab1a9e45e1be502c5","cacheData":{"env":{}}}